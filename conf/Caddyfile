:80 {
    import mime.types

    caddylog {
        log_path /var/log/caddy/yig-front-caddy.log
        log_level 20
    }

    domainresolution

    log / access.log "{combined}" {
        rotate_size 50  # Rotate after 50 MB
        rotate_age  90  # Keep rotated files for 90 days
        rotate_keep 20  # Keep at most 20 log files
        rotate_compress # Compress rotated log files in gzip format
    }

    errors error.log {
        rotate_size 50  # Rotate after 50 MB
        rotate_age  90  # Keep rotated files for 90 days
        rotate_keep 20  # Keep at most 20 log files
        rotate_compress # Compress rotated log files in gzip format
    }

    pipa {
        redis_address 10.5.0.8:6379
        redis_password hehehehe
        redis_maxIdle 3
        secret_key hehehehe
    }

    proxy / http://127.0.0.1:8080 {
        header_upstream Host {host}
		header_upstream X-Real-IP {remote}
        header_upstream X-Forwarded-For {remote}
        header_upstream X-Forwarded-Proto {scheme}
    }
}

*.s3.test.com:80 http://s3.test.com {
    import mime.types

    caddylog {
    	log_path /var/log/caddy/yig-front-caddy.log
    	log_level 20
    }

    customdomain {
        custom_domainflag x-oss-action
        secret_key hehehehe
        seal_key hehehehe
    }

    log / access.log "{combined}" {
        rotate_size 50  # Rotate after 50 MB
        rotate_age  90  # Keep rotated files for 90 days
        rotate_keep 20  # Keep at most 20 log files
        rotate_compress # Compress rotated log files in gzip format
    }

    errors error.log {
        rotate_size 50  # Rotate after 50 MB
        rotate_age  90  # Keep rotated files for 90 days
        rotate_keep 20  # Keep at most 20 log files
        rotate_compress # Compress rotated log files in gzip format
    }

    pipa {
        redis_address 10.5.0.8:6379
        redis_password hehehehe
        redis_maxIdle 3
        secret_key hehehehe
    }

    proxy / http://127.0.0.1:8080 {
        header_upstream Host {host}
        header_upstream X-Real-IP {remote}
        header_upstream X-Forwarded-For {remote}
        header_upstream X-Forwarded-Proto {scheme}
    }
}
